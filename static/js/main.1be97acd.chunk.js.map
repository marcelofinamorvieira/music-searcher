{"version":3,"sources":["Songs.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Songs","props","state","playing","audio","playingURL","previewURL","Audio","this","pause","setState","play","tracks","className","map","track","key","onClick","playAudio","previewUrl","alt","src","artworkUrl100","trackName","collectionName","Component","App","query","artist","genre","FETCH_URL","split","join","fetch","method","then","response","json","undefined","results","artistName","primaryGenreName","type","placeholder","value","onChange","event","target","onKeyPress","preventDefault","search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAgDeA,GChDA,I,wDDGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAS,EACTC,MAAO,KACPC,WAAY,IALD,E,sDAQTC,GACN,IAAIF,EAAQ,IAAIG,MAAMD,GACjBE,KAAKN,MAAMC,QAIRK,KAAKN,MAAMG,aAAeC,GAC1BE,KAAKN,MAAME,MAAMK,QACjBD,KAAKE,SAAS,CAACP,SAAS,EAAOE,WAAY,OAE3CG,KAAKN,MAAME,MAAMK,QACjBL,EAAMO,OACNH,KAAKE,SAAS,CAACP,SAAS,EAAME,WAAYC,EAAYF,YAT1DA,EAAMO,OACNH,KAAKE,SAAS,CAACP,SAAS,EAAME,WAAYC,EAAYF,a,+BAYpD,IAAD,OACDQ,EAASJ,KAAKP,MAAMW,OACxB,OACI,qBAAKC,UAAU,UAAf,SAEQD,EAAOE,KAAI,SAACC,EAAOC,GACf,OACI,sBAAeH,UAAU,QAAQI,QAAS,kBAAM,EAAKC,UAAUH,EAAMI,aAArE,UACI,qBAAKC,IAAI,cAAcC,IAAKN,EAAMO,gBAClC,6BAAKP,EAAMQ,YACX,6BAAKR,EAAMS,iBACX,qBAAKX,UAAU,aAAf,SAA4B,qBAAKA,UAAU,mBAAf,SAAmC,EAAKX,MAAMG,aAAeU,EAAMI,WAAa,uCAAmB,gDAJzHH,Y,GAhClBS,cEwDLC,E,kDApDX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTyB,MAAO,GACPC,OAAQ,KACRC,MAAO,KACPjB,OAAQ,IANG,E,qDAST,IAAD,OAEDkB,EAAS,UADI,mCACJ,gBAAsBtB,KAAKN,MAAMyB,MAAMI,MAAM,KAAKC,KAAK,KAAvD,yBACbC,MAAMH,EAAW,CACbI,OAAQ,QAEPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,QACsBC,IAApBD,EAAKE,QAAQ,IACb,EAAK7B,SAAS,CAAEkB,OAAQS,EAAKE,QAAQ,GAAGC,aACxC,EAAK9B,SAAS,CAACmB,MAAOQ,EAAKE,QAAQ,GAAGE,mBACtC,EAAK/B,SAAS,CAACE,OAAQyB,EAAKE,WAE5B,EAAK7B,SAAS,CAAEkB,OAAQ,4C,+BAI9B,IAAD,OACL,OACI,sBAAKf,UAAU,MAAf,UACI,kDACA,iCACI,uBACIA,UAAU,eAAe6B,KAAK,OAC9BC,YAAY,gDACZC,MAAOpC,KAAKN,MAAMyB,MAClBkB,SAAU,SAAAC,GAAK,OAAI,EAAKpC,SAAS,CAAEiB,MAAOmB,EAAMC,OAAOH,SACvDI,WAAY,SAAAF,GACU,UAAdA,EAAM9B,MACN8B,EAAMG,iBACN,EAAKC,aAGjB,wBAAQjC,QAAS,kBAAM,EAAKiC,UAAUR,KAAK,SAAS7B,UAAU,kBAA9D,uBAEJ,6BAAKL,KAAKN,MAAM0B,SAChB,qBAAKf,UAAU,QAAf,SAAwBL,KAAKN,MAAM2B,QACnC,cAAC,EAAD,CAAOjB,OAAQJ,KAAKN,MAAMU,gB,GA/CxBa,aCOH0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1be97acd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Songs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: false,\n            audio: null,\n            playingURL: \"\"\n        }\n    };\n    playAudio(previewURL) {\n        let audio = new Audio(previewURL);\n        if (!this.state.playing) {\n            audio.play();\n            this.setState({playing: true, playingURL: previewURL, audio});\n        } else {\n            if (this.state.playingURL === previewURL) {\n                this.state.audio.pause();\n                this.setState({playing: false, playingURL: \"\"});\n            } else {\n                this.state.audio.pause();\n                audio.play();\n                this.setState({playing: true, playingURL: previewURL, audio})\n            }\n        }\n    }\n    render() {\n        let tracks = this.props.tracks;\n        return (\n            <div className=\"Library\">\n                {\n                    tracks.map((track, key) => {\n                        return (\n                            <div key={key} className=\"Track\" onClick={() => this.playAudio(track.previewUrl)}>\n                                <img alt=\"album cover\" src={track.artworkUrl100} />\n                                <h5>{track.trackName}</h5>\n                                <h6>{track.collectionName}</h6>\n                                <div className=\"track-play\"><div className=\"track-play-inner\">{this.state.playingURL === track.previewUrl ? <span>| |</span> : <span>&#9654;</span>}</div></div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        );\n    };\n}\n\nexport default Songs;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Songs from \"./Songs.js\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: \"\",\n            artist: null,\n            genre: null,\n            tracks: []\n        }\n    }\n    search() {\n        const BASE_URL = \"https://itunes.apple.com/search?\";\n        let FETCH_URL = `${BASE_URL}term=${this.state.query.split(\" \").join(\"+\")}&media=music&limit=10`;\n        fetch(FETCH_URL, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n            .then(json => {\n                if (json.results[0] !== undefined) {\n                    this.setState({ artist: json.results[0].artistName });\n                    this.setState({genre: json.results[0].primaryGenreName});\n                    this.setState({tracks: json.results});\n                } else {\n                    this.setState({ artist: \"No artist with that name was found\" })\n                }\n            })\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <h1>Music Overviewer</h1>\n                <form>\n                    <input\n                        className=\"form-control\" type=\"text\"\n                        placeholder=\"Type in the artist or band you want to search\"\n                        value={this.state.query}\n                        onChange={event => this.setState({ query: event.target.value })}\n                        onKeyPress={event => {\n                            if (event.key === \"Enter\") {\n                                event.preventDefault();\n                                this.search();\n                            }\n                        }} />\n                    <button onClick={() => this.search()} type=\"button\" className=\"btn btn-primary\">Search</button>\n                </form>\n                <h2>{this.state.artist}</h2>\n                <div className=\"Genre\">{this.state.genre}</div>\n                <Songs tracks={this.state.tracks}/>\n            </div>\n        );\n    };\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}